dwm - dynamic window manager ============================ dwm is an extremely fast, small, and dynamic window manager for X.
This is MajorGamerJay's build for dwm with added patches.

Requirements
------------
In order to build dwm you need the Xlib header files.

Keybindings & Shortcuts
-----------------------
For this build, the keybindings and shortcuts are different than the default ones

<MODKEY> = Default MODKEY in config.def.h
<browser> = Default web browser (*browsercmd[]) in config.def.h
<terminal> = Default terminal (*terminalcmd[]) in config.def.h

<MODKEY> + Shift + Return/Enter -> Spawn <terminal>
<MODKEY> + Shift + M            -> Spawn browser
<MODKEY> + Shift + N            -> Spawn ncmpcpp (music player)
<MODKEY> + Shift + B            -> Spawn Htop (process viewer)
<MODKEY> + Shift + C            -> Kill focused window
<MODKEY> + Shift + Q            -> Quit DWM
<MODKEY> + D                    -> Spawn dmenu
<MODKEY> + J/K                  -> Focus on other windows
<MODKEY> + H/L                  -> Resize window width
<MODKEY> + B, N, M              -> Change window layout
<MODKEY> + 1-9                  -> Change tag (Workspace)

Patches
-------
none added yet


Installation
------------
Edit config.mk to match your local setup (dwm is installed into
the /usr/local namespace by default).

Afterwards enter the following command to build and install dwm (if
necessary as root):

    make clean install


Running dwm
-----------
Add the following line to your .xinitrc to start dwm using startx:

    exec dwm

In order to connect dwm to a specific display, make sure that
the DISPLAY environment variable is set correctly, e.g.:

    DISPLAY=foo.bar:1 exec dwm

(This will start dwm on display :1 of the host foo.bar.)

In order to display status info in the bar, you can do something
like this in your .xinitrc:

    while xsetroot -name "`date` `uptime | sed 's/.*,//'`"
    do
    	sleep 1
    done &
    exec dwm


Configuration
-------------
The configuration of dwm is done by creating a custom config.h
and (re)compiling the source code.
